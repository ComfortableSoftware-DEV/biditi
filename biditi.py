#!/usr/bin/python


# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
# import globally
# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#

from datetime import datetime as DT
from os import path as PATH
import pickle as PD
import PySimpleGUI as SG

# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
# setting constants
# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#

BLACK = "#000000"
GRAY8 = "#888888"
GRAYC = "#CCCCCC"
GREEN2 = "#448811"
MAINDOWNCOLOR = "#880000"
MAINDOWNTEXTCOLOR = "#FF0000"
MAINUPCOLOR = "#008800"
MAINUPTEXTCOLOR = "#00FF00"
ORANGE = "#FF7F00"
PURP440022 = "#440022"
PURP660044 = "#660044"
TEAL1 = "#00FF7F"
YELLOW2 = "#444422"
YELLOW666600 = "#666600"


AIR = "AIR"
DYNAVAP = "DYNAVAP"
FIREFLY = "FIREFLY"
PEAK = "PEAK"
Q = "Q"
QDDM = "QDDM"
QOMO = "QOMO"
VARIOUS = "VARIOUS"


TASKLIST = [
	AIR,
	DYNAVAP,
	FIREFLY,
	PEAK,
	Q,
	QDDM,
	QOMO,
	VARIOUS,
]


ADJBTNDOWNCOLOR = MAINDOWNCOLOR
ADJBTNDOWNTEXTCOLOR = MAINDOWNTEXTCOLOR
ADJBTNUPCOLOR = MAINUPCOLOR
ADJBTNUPTEXTCOLOR = MAINUPTEXTCOLOR
ADJTIMEDOWNBKGNDCOLOR = MAINDOWNCOLOR
ADJTIMETXTCOLOR = GRAYC
ADJTIMEUPBKGNDCOLOR = MAINUPCOLOR
BTNDOWNCOLOR = MAINDOWNCOLOR
BTNDOWNTEXTCOLOR = MAINDOWNTEXTCOLOR
BTNQUITCOLOR = PURP440022
BTNQUITTEXTCOLOR = YELLOW666600
BTNRESETONECOLOR = MAINDOWNCOLOR
BTNRESETONETEXTCOLOR = MAINDOWNTEXTCOLOR
BTNTASKDOWNCOLOR = MAINDOWNCOLOR
BTNTASKDOWNTEXTCOLOR = MAINDOWNTEXTCOLOR
BTNTASKUPCOLOR = MAINUPCOLOR
BTNTASKUPTEXTCOLOR = MAINUPTEXTCOLOR
BTNUPCOLOR = MAINUPCOLOR
BTNUPNOTIMECOLOR = MAINUPCOLOR
BTNUPNOTIMETEXTCOLOR = MAINUPTEXTCOLOR
BTNUPTEXTCOLOR = MAINUPTEXTCOLOR
BTNZEROCOLOR = PURP440022
BTNZEROTEXTCOLOR = YELLOW666600
INTERRUPTRATE = 100
LASTFILENAME = "biditi.last"
MAXTICKS = 59999
MODE_NORMAL = "MODE_NORMAL"
MODE_RESTART = "MODE_RESTART"
MODE_START = "MODE_START"
NOT = "NOT"
SPACECOLOR = GRAY8
SPINBKGNDCOLOR = TEAL1
SPINSIZE = (10, 1)
SPINTEXTCOLOR = ORANGE
TASKCOUNTERCOLOR = GREEN2
TASKCOUNTSZ = (3, 1)
TICKSPERSEC = 10
TIMERDOWNBKGNDCOLOR = MAINDOWNCOLOR
TIMERDOWNTEXTCOLOR = MAINDOWNTEXTCOLOR
TIMEROFFBKGNDCOLOR = BLACK
TIMEROFFTXTCOLOR = YELLOW2
TIMERUPBKGNDCOLOR = MAINUPCOLOR
TIMERUPTEXTCOLOR = MAINUPTEXTCOLOR


DN16 = b'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAC13pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja1ZZtchshDIb/c4oeAUkIwXFYPmZ6gx6/L7vrtet6YqdOUgeNF4cF6UWPIHb918/hfqBRyskFtRRzjB4t5JC54Evy59b3fhsjH9bnqdH+JHfzBaMX9LINWtjfyj5+mh+PHo5uvCC9WiBHGL4MbGUfZ89/KOr5iHHezv4Zo6Ux+ra7EiLSELdNbSHcyQ0mLsiSrMsizPBRfLfVMiz54isF33z1C6xSJibxgwI1R4UGdWroK1VoDNzZ0DNXlnUsiXHmKl5IwjQabJKlSRKWyl1EghM+tNAaN6/xKiVEboSpTHBGWPKmuXsTHrExqkeOiLB72nMFXcyTA800ynxiGoDQ2LnpmuCTHc1dgBUQ1DXNCRssftlcLErn2pK1AATzFP1WX2RtUuO1SgJiK8SQAIGPJEqRvDEbURBOAFSgnCXwAgKkyg0iOYhEsEmoI8TGGqN1Litv4zgq4KMSxcAmSwGsEBT1YyGhhoqKBlWNapo0a3FRYogaY7Q4z1wxsWBq0cySZStJUkiaYrKUcDZL5iw4kppjtpxyzqUgZgmuaMHqghmlLLzIEhZd4mJLWvJSKsqnhqo1Vqup5loaN2mhaYvNWmq5lU4dpeR66Npjt5567mWg1oaMMHTEYSONPMpBbaf6l72DGu3UeCU159lBDaNm09HqguY9o5MZiHEgELdJAAXNk5lPFAJPcpOZz4xToQyROtk08sVRBMLQiXXQwe5M7mFuDrm+x40fIecmug8gx67LFbcb1Nq8CetKbDuFM6decPoAPhVOZWSXZRhyxfNv/0TvnnXwnxxJrXsuwHj4jluW99ycUvNFiq6VHOMvp+iGsk+uo3tKXlfRhTJ3jfFjFL1XyesqOhzdKPl/U/SEkldX9Mb18OjF555V8l0UvVfZBST3rJLvpuieshsF/FX/jj5LkeC3UsYPz98iX6IbCeIDbAAAAYRpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6WiFQcLijgErE4WREUctQpFqBBqhVYdTC79EJo0JCkujoJrwcGPxaqDi7OuDq6CIPgB4uTopOgiJf4vKbSI8eC4H+/uPe7eAUKtxDSrbQzQdNtMJeJiJrsihl4RRhf6MISQzCxjVpKS8B1f9wjw9S7Gs/zP/Tm61ZzFgIBIPMMM0yZeJ57atA3O+8QRVpRV4nPiUZMuSPzIdcXjN84FlwWeGTHTqTniCLFYaGGlhVnR1IgniaOqplO+kPFY5bzFWStVWOOe/IXhnL68xHWag0hgAYuQIEJBBRsowUaMVp0UCynaj/v4B1y/RC6FXBtg5JhHGRpk1w/+B7+7tfIT415SOA60vzjOxzAQ2gXqVcf5Pnac+gkQfAau9Ka/XAOmP0mvNrXoEdCzDVxcNzVlD7jcAfqfDNmUXSlIU8jngfcz+qYs0HsLdK56vTX2cfoApKmr5A1wcAiMFCh7zefdHa29/Xum0d8PRltyldQcsX8AAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfkDAsXMQ8cezbiAAAAKHRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QIGJ5IEdhZWxpY0dyaW1ld9KrjgAAAE5JREFUOMu10TsOgEAMA9EZ7n/n0GyB0LK/BNe29CQbECRykYwApwrBGsGJwratE+wofOxqBSsKX5t6wUhhp/+PoKfwo5sWDBMQs1fSght0IRISVNQe5AAAAABJRU5ErkJggg=='

DN32 = b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAEEHpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarZZpluMqDIX/axW9BCQBguUwnvN28JbfF9txJdWVqgxlTqwEM0i6H3Jo/P/fpD+4RFwiHyzFHKPD5bPPUvAluY9rHHbvY+e3++Xi48705QOBVVjdO80fT/Xov4yPp8VCXzzg8GmCntvI9cZWjn5xcuMRz5ug9nCOz5w9zTn26IqPSEPcg9qn0mUZDKzIkm7TIprhE/DdtpbRkiuusXfdNVfRGmcWVjfZcycuPHlwh23c4KOXIQYr0kS3vqQmWZo6ZfWr8RTTrF2TijYZqupJ5fSFt33ztl/jhJ07Y6gwFmNM+bbRTwMeaXM2hxwxI3o+cgW/gBd04JVGXXcM85sQu25hS/ClnRddCatQMGxpTgiwuLovUQN/sKUbAIpxAXbni60v1WSjxGPvAGdYIYGLrIEjOxMxZq+SIFCB56JeKhTgEKTDSfGqEdokcIS9Mcd4GytB9n4cFegTNKpBm6wFYnkfwI/5BIZK0OBDCDFYSCGHQlGjjyHGaHGduWJq3oJFM0uWrSRNPoUUk6WUcipZsuJIhhyz5ZRzLgV7Fk8lFMwuGFFKlarV11BjtZpqrqUBn+ZbaLFZSy230qVr9z302K2nnnsZPIASDT/CiMNGGnmUCdamTj/DjNNmmnmWU7VD1X/aE6rxoZpsSq1xdqqGXrO10LYErzoTlmZQTDxDcVsKAGhZmrnE3stSbmnmsuBUBIGTYWnT2RXiCAn9YAmTT+0+lHtYN0Kuf9JNHlGOlnS/oJzQ0E+6faFaX5WwbYrtp3Dl1ClOH4RPRVKZmbJOQ65k/XZvWHpporY2alepF9uVWrPRZpvT6+CaVOcIE06j2tVlK4hhHxjR8zRZX30APZ8t3XvwrD0Xwo4WRs6HHaHPWOFcydP1Fm15hyM1Rx+rNnvZk+zbTIbqvecISX875/RsjveNQfHEy/x8Pj21MlWXi8sqz6rgqLtZ03CQICMmBBXHuo/e9pyAZ+stbSrg4C5Lly/v2n0hy7lbiYfFAbOOvNko1tQ4L29axRsbp2bzr+9BAR8w07b4CPTvAgAdxLc9H9HP3vyl/yFLjw5cGyGZ+0Y5zabp/kI31Ld2Qr9e6GPoBXv83rC/gZ6+of4pSw9BfSK9fLmB+kSJ7rGH6J6Cnt6G+seFDtjvQ+9c3o7yXNgP+ob6pyz9CPWG9CpwEPwrpA9+6CESH0Ce3kb6mYXuIn8FPL1S6D/bRTK9Wqc/80JPv9LuIE9vI/2qR/eQp1cK/Y09iKZ36vQ1IfRMXf4Oevqh0D8C9a94dEJPrxT6K+jPMk3v1OlrS+/94btd6B71j0L9+x49XegB/fW7EH/3+6Q9xekFlm8t/YsgSk/Ge+ov9OxSWweZmEcAAAGEaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1OlohUHC4o4BKxOFkRFHLUKRagQaoVWHUwu/RCaNCQpLo6Ca8HBj8Wqg4uzrg6ugiD4AeLk6KToIiX+Lym0iPHguB/v7j3u3gFCrcQ0q20M0HTbTCXiYia7IoZeEUYX+jCEkMwsY1aSkvAdX/cI8PUuxrP8z/05utWcxYCASDzDDNMmXiee2rQNzvvEEVaUVeJz4lGTLkj8yHXF4zfOBZcFnhkx06k54gixWGhhpYVZ0dSIJ4mjqqZTvpDxWOW8xVkrVVjjnvyF4Zy+vMR1moNIYAGLkCBCQQUbKMFGjFadFAsp2o/7+Adcv0QuhVwbYOSYRxkaZNcP/ge/u7XyE+NeUjgOtL84zscwENoF6lXH+T52nPoJEHwGrvSmv1wDpj9Jrza16BHQsw1cXDc1ZQ+43AH6nwzZlF0pSFPI54H3M/qmLNB7C3Suer019nH6AKSpq+QNcHAIjBQoe83n3R2tvf17ptHfD0ZbcpXUHLF/AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH5AwLFzALAg3DugAAACh0RVh0Q29tbWVudABDcmVhdGVkIHdpdGggR0lNUCBieSBHYWVsaWNHcmltZXfSq44AAACISURBVFjD1dW7DYBADATRHfrv2SQECB1wf9suYEd6iTHJ5HiHnA9J8lJAIoaAhwJXO47ATgVu3VgCOxR4NOMJrFSg0IspsEKBl1ZcgZkKfHRiC8xQ4KcRX2BEgYr9HAI9ClRu5xFoUaBhN5dAjQKNm/kEvhTo2MspUFKgc8tdYOhMstFv6S5wAg58IipGe3vkAAAAAElFTkSuQmCC'

DN64 = b'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'

DN96 = b'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'

UP16 = b'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADB3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjazZVdstsgDIXfWUWXgCSEYDmYn5nuoMvvAfvmtrdJE6d+KEyMBwQc9B0c1398H+4bCmXyLqilmGP0KCGHzAUvyX+WfrR7H/mwnh+Fjie5uwOMVtDK3mnhGJWj/yM+3losdGeA9MsEuW3Dv25s5ehnz78pGnrb4/M4x2+Mlsbo++lKiEhD3A+1b+E+lkHghizJmhZRDT/Fu62aUZMvvlLwzVe/oVYkmUn8oEDNUaFBnRraShUaA3c2tMyVZfUlMc5cxQtJmJUGm2RpkoSlcheR4IRvWmjtm9d+lRJ2boRQJixGmPLX6p4FvFLHqB45IsLp6cgVdDFPDjTTKPOJMAChcXDTleCPeivuF7ACgrrSnHDA4rd9iU3p01uyDCCIU7S7v8japMbLJQF7K8SQAIGPJEqRvDEbURBOAFSgnCXwBgKkyg0iOYhEsEnwEfbGHKMVy8p7P64K+KhEMbDJUgArBIV/LCR4qKhoUNWopkmzFhclhqgxRovzzhUTC6YWzSxZtpIkhaQpJksp5VQyZ8GV1Byz5ZRzLgV7luCKFswuiChl4022sOkWN9vSlrdSYZ8aqtZYraaaa2ncpIWmLTZrqeVWOnVYyfXQtcduPfXcy4DXhowwdMRhI408yo3aQfWPeoIaHdR4kZpxdqOGXrO50FqC5ndGJzMQ40AgbpMADM2TmU8UAk9yk5nPjFuhDJE62TTyxVEEwtCJddCN3Se5l7k55PoZN36FnJvoLiDHrssXbneotfklrIvYfgtnTr3g9mG8p8KpINm8v7zcDuhfr6M2P2o6BtxctcR9pHEdzerZpVfrzk54pMmtkQs0uSvyMwPcl8i3tblrmOGu/RH5piZ3RX4OHz2ceUqbu4bZ4aMrNLkr8nPHR+9rc9cwu+OjdzW5K/LzxEfntLlrmD3x0RlN7or8nPDRc23uiflf1uTe1fJVk3to+hP5edNHDxd6aP5Tmty/a/F/+YM8mZ8LfPT/LjTg7AxX/gQaxLaLAaEVugAAAYRpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6WiFQcLijgErE4WREUctQpFqBBqhVYdTC79EJo0JCkujoJrwcGPxaqDi7OuDq6CIPgB4uTopOgiJf4vKbSI8eC4H+/uPe7eAUKtxDSrbQzQdNtMJeJiJrsihl4RRhf6MISQzCxjVpKS8B1f9wjw9S7Gs/zP/Tm61ZzFgIBIPMMM0yZeJ57atA3O+8QRVpRV4nPiUZMuSPzIdcXjN84FlwWeGTHTqTniCLFYaGGlhVnR1IgniaOqplO+kPFY5bzFWStVWOOe/IXhnL68xHWag0hgAYuQIEJBBRsowUaMVp0UCynaj/v4B1y/RC6FXBtg5JhHGRpk1w/+B7+7tfIT415SOA60vzjOxzAQ2gXqVcf5Pnac+gkQfAau9Ka/XAOmP0mvNrXoEdCzDVxcNzVlD7jcAfqfDNmUXSlIU8jngfcz+qYs0HsLdK56vTX2cfoApKmr5A1wcAiMFCh7zefdHa29/Xum0d8PRltyldQcsX8AAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfkDAsXMR8BzCaGAAAAKHRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QIGJ5IEdhZWxpY0dyaW1ld9KrjgAAAElJREFUOMtjYMAH/kMhHsDEQCFgxGs7qkpGOroAl7+xuIIGLiAQ6uiuoLILCNmOxRVUdAGxtqO5gkouINV2JFdQwQXk2k6tWAAAfOMSEjTpcNIAAAAASUVORK5CYII='

UP32 = b'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'

UP64 = b'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'

UP96 = b'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'

UP08 = b'iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAYAAADED76LAAADBXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZZdkuMqDIXftYq7BCQhBMvB/FTdHdzlz/FPp3vSmcRJ+mEeLlSMCwt0rO/gCo3//p30DxrnIhTNcyopBbRYYpGKmxw+2zjGfY5D3K4fjY8r080HglEx6j7p8Xiqx/xHfLqM2OjGA7arBXpJI18Tez3mJchvioZecny+zvGbs+c5x/52NSaUIe0vtaegj20QuKBKui1L6I6f4d63XtBzqKFxDD20sKA3LiysYXLkTlx58uCOsXGDxihDHKNIE93msroUaRqUNa6dp7gW7ZpVtMlQ1UgqFy285S1bvsYZmTsjVBibMZbc7fQo4EyfswXUiBlvz0etoEtk5cBrGXW9IgxAeB7cbCvwR780+gJWQdC2Mme8YA3LvsVi/Okt3QygiDOMu7/Y+0pNNpdE5DaIYQWCkFiNEwcXceaokgGoQrlolAUE2Ew6REpUTWCT4SPkxhrnLVZM9nkcFfAxTepgU7QCVowG/3jM8FA1tWhmydyyFauUNMVkKSVP65mrrh7dPLl79uI1a47Zcsqecy65FimKI2klFS+5lFIrctZI1SpWV0TUusiiS1xsSYsveSlLbbBPi81aat5yK6126dpjt56699xLr4MHrEQjDhtp+MijjDrhtakzTptp+syzzHqhdlD91p+gxgc12UitcX6hhln3daNtC16/M7YyAzGJDOK+EoChZWUWMscoK7mVWSiCU2ECkbay6RwqcQLCOFhs8oXdJ7nT3Ai1fsRNzpCjFd0PkBMaesXtBrW+fgnbRmw/hWtNg+L04fnIVXJFsWW/eThO6N5uZ+thtnwVQF8iS017ZJc2u7ezKbaRzgY+0kS/Rb6hic6Lv6+JriJf1kTPFPSeJvoW+aImetc/N3z0x51OaaT3PX3DR+9oop84Zzd89Lom+pmzf8NHr2qid/3zhI/OaaQ7h+ApTfSKllua6O7BfEITvabluyZ68LE4rYle1XKtib4Z7En//ICP/t/ob94I/48KDPcLCh2pB5Pw+uYAAAGEaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1NFkUoHO0hxyFCdLIiKCC5ahSJUCLVCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0CcHJ0UXaTE/yWFFjEeHPfj3b3H3TtAaFSYZnWNAZpum+lkQszmVsWeV4QQhoAZRGVmGXOSlILv+LpHgK93cZ7lf+7P0a/mLQYEROJZZpg28Qbx1KZtcN4njrCSrBKfE4+adEHiR64rHr9xLros8MyImUnPE0eIxWIHKx3MSqZGPEkcUzWd8oWsxyrnLc5apcZa9+QvDOX1lWWu0xxCEotYggQRCmooowIbcVp1UiykaT/h44+6folcCrnKYORYQBUaZNcP/ge/u7UKE+NeUigBdL84zscw0LMLNOuO833sOM0TIPgMXOltf7UBTH+SXm9rsSMgvA1cXLc1ZQ+43AEGnwzZlF0pSFMoFID3M/qmHDBwC/Steb219nH6AGSoq9QNcHAIjBQpe93n3b2dvf17ptXfD4cBcq8vg+7BAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH5AwPAwUCTa0lUwAAACh0RVh0Q29tbWVudABDcmVhdGVkIHdpdGggR0lNUCBieSBHYWVsaWNHcmltZXfSq44AAAAoSURBVBjTY2BABv+hEAkwMRAAjCi6UWUYSTABXTeSKUSYgEs3sb4AAMxkCgbNZQSOAAAAAElFTkSuQmCC'

DN128 = b'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'

UP128 = b''
X16 = b'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'

X32 = b'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'

X64 = b''

X96 = b''

UPNOTIME128 = b''

QUIT128 = b'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'

RESETONE128 = b''

ZEROALL128 = b'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'

DN08 = b'iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAYAAADED76LAAACvXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZZtbtswDIb/6xQ7gvglSseR9QHsBjv+XtlO0rVF2q4FtgKRECuRKfIVH8pOGL9+zvADjXLmoOY5lZQimhYtXPElx1sb53jMUdT9eml0Xim8eoMxCkY5Jl3Pu3LOX+zTdYSjV26QPVsg1zD8NLDXc54j/6Gol2uM23bOz5w9zzmO3VVNSEM6NnWECBc3MNyQJdmXJXTHx/Dd917Qc6yxkcYeW9zQGxVikjhJqQeqNGlQx9ioQaPyYMfI3Fj2uSzOhZtEIdHVabJLkS5ZWBoPEdEgfNVCe9yyx2uUEbkTTJngjLDkbg9vGbynz9kickSE3dOZK+hiXhxopVHWFWYAQvPkZnuCL/3awhOwAoK2pzljgzVuh4vN6FZbsheAwM4wHvVF3hc13qtEEdsghgQIYiIxShSd2YlUOANQhXIW5Q0EyIw7RLKKJLDBEVmxscZpt2XjYx5HBXxMkjjYFKmApWqoH9eMGqompmaWzC1bsRqSJE2WUvK0zlx1cXXz5O7Zi9csWbPllD3nXHItXARH0koqXnIppVbErBqqVayusKh140023WxLm295K1ttKJ+mzVpq3nIrrXbu0rVbT9177qXXQQOlFIYOG2n4yKOMOlFrU6ZOm2n6zLPMeqV2Un3RP0CNTmq8k1p2fqWGWfflaHdB6zljixmIsRKI+yKAgubFLGZS5UVuMYuFcSqMIdIWm06xBkpAqIPYJl3Z3ci9m1tArt/ixu8hFxa6LyDHYcgzbq9Q6+tJ2HZixylcOY2C0wfwuXKus4Qi05ErXr/jJ8bwWQcPR//MkbR21gPqfOJ1fxrgjcNnnbxVJp9T9ERA+EPBC8OHom+o6AMKw98qeC7gg44eir6hojsK77/X7ij44iPyUPQfKBL8Fyr4Y/kb/7SXn9obAksAAAGEaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1NFkUoHO0hxyFCdLIiKCC5ahSJUCLVCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0CcHJ0UXaTE/yWFFjEeHPfj3b3H3TtAaFSYZnWNAZpum+lkQszmVsWeV4QQhoAZRGVmGXOSlILv+LpHgK93cZ7lf+7P0a/mLQYEROJZZpg28Qbx1KZtcN4njrCSrBKfE4+adEHiR64rHr9xLros8MyImUnPE0eIxWIHKx3MSqZGPEkcUzWd8oWsxyrnLc5apcZa9+QvDOX1lWWu0xxCEotYggQRCmooowIbcVp1UiykaT/h44+6folcCrnKYORYQBUaZNcP/ge/u7UKE+NeUigBdL84zscw0LMLNOuO833sOM0TIPgMXOltf7UBTH+SXm9rsSMgvA1cXLc1ZQ+43AEGnwzZlF0pSFMoFID3M/qmHDBwC/Steb219nH6AGSoq9QNcHAIjBQpe93n3b2dvf17ptXfD4cBcq8vg+7BAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH5AwPAwMfePHuDAAAACh0RVh0Q29tbWVudABDcmVhdGVkIHdpdGggR0lNUCBieSBHYWVsaWNHcmltZXfSq44AAAAwSURBVBjTjcwxDgAgDMNAh///OV1YqKDBq6WTwQwtQgJ4KQL9CTdF+0XhyOAuRaEAR6QKBigloSoAAAAASUVORK5CYII='

RESETONE64 = b''

UPNOTIME64 = b''

QUIT64 = b'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'

ZEROALL64 = b'iVBORw0KGgoAAAANSUhEUgAAAEAAAAAgCAYAAACinX6EAAAMxHpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarZlpkhy7DYT/8xQ+AvflOCRBRPgGPr4/sLpn0Rtbeg5PS1OamuIGJDITJXf+9U91/+ArpZxdLq3XUavnK4884uQf3X9+ndf1uRd8vt/fX+H1Pbivv/gYH7mTuKbnx5Zf99Pr/nui+nFloh9+EcovA9LH+vHrwm1+LBy/7Wh4v/3Xr/75V1W66nlON3MlDPU51LOEe0/Dg4sopTus8mn8Lfy73c/g0/30O2QvLLf47DBCDMlryEFcmEHDCcJ1h80eczyxcY1xx3Tv9dTiiDv5FFK2T9DY0kiSeoppx5NIm0vxYy/hrjvuejt0VpbAozEwWWDIf/243z3wJx/V7YlRCBbM/sSKfcVoeQgWxmTfeYyEBH3lrdwAvz8fX+5LYhMZLDfMnQNOv54pVgmf2EoXAInnCtcHX6GJZS1elGTWLmwmJFLga0gl1OBbjC2EnGInQZOdx5TjIgOhlChsMuaUKrnp4Ii1GdPCfTaW+NynVMhPSTU1cjPSJFk5F/DTcgdDs6SSSym1tNLLKNPVVHMttdZWreZmSy230mprrbfRZk8999Jrb7330eeII1GSZdTRRh9jzMmaM7tZJqMnT8y54korr7LqaquvseYGPjvvsutuu++xp0RJkqVIlSZdhswTDlByJ59y6mmnn3GmgjVNmrVo1aZdh86PrL2y+pfP38haeGUt3kzZc+0ja9xtzSa6UwTjmWI5I2MxBzLeLAMAOlrOfA85R8uc5cyPSFWUyCaL5UaCny5UUphPiEXDR+4+M/fHeXPE+nd5i3+SOWep+z9kLrqTfsnbD1kTY8J9M/ZUocXUJ6pPY5/2Z2230gHp90d/r4Mw1OElrj5yqdJXU4ZUVXauK6lyY5Yajkg4s2ktJR91yu5OhdjKGloZU21YnulsmFX0jNxWg8tklJJARFHi0oi6NL9Wq5rGIRau7sWPJGbXuOqpEg/UumI7kmBX9ij7cx/hrvXa326yps0N1gj2bE3POpr8+T4opwaqUtUtZ4klYo+1QkqbZUKXo89psgRC4JaxBpnmaaK/8tiSS9irN3I1156WKKLZ7lnRy3vaXoUF9w1WsWCJGx+H9/4e3yLM2jWwuq47eLe6AFvXvTasz65LBbd9FnA+ivpRoutnxYLMWNoYzUZERMEzWSFnwlbGSR6U1j4onTLPqIm7LLJPYxuzjZW3sxUDuy2dyPRBnPY8cxUiR2rH6Is6WINzAcT1jJY5OdIKIDwS7l6BqBsSR4t7QLTExkrJrrkw/V+u0x+GdqoO4bDcDXZ0RaStu6MpGVy971pMCNmUkuPcMncC96pjhU6wCB/CGG8tlrTLiXWafJtA7i65x6wpNdK6iYDELVEHSOx2kjOznV0YSTyoBeouJUDhe27jgNjQ3Zg3X43CBZnRVwLcTwolyXjFD8kAQ/bj/UFK0p6V0jsAEmwBw5xcnQs6ImJsvhYb2qlWZdo8Sa4MMnPKbGxpg7JcRAdPtCBpUmsUd2HPVrRrxF8D98QNWA5Dbk2MIzygJ4uuYM9lFawdRAlZBE6filsc168DhUF2i6zkJtomzAPZnXInDY0T9QYKqLFdtFvFQkQtTj1MdtbqjpodSiaGUq1gTwv8P0O3Ce5Z70mJItCRTDzKaCexoZUQ5RJ7JvJnT0dGSSAH3kTYdkJlrOWznkbSB2lkf71qTRyL8rB0TXizkfkCYCkCqOOII6xjQpJU+UnGwgF0t0adlB1JfL3Q83nnKcA+GoNaUCigUWpPT5WiIsB9wa8MTkZ1MPqWe5Q1SAfHjnDXHoPBSzKw0KNbz1l2+voCbj3BKQzGoTrsEcZmqtrnIRqnzTVAKswgwpG1ADz0qFJj8VTbmZGjzU+SdnS69OLZBuROpc4XzbQ8VsHDCPPliBz2Rv0KLCSBcrf6Q0M1zacW3U/F+VzTgAJqY5v1cCbwsdapT/EvArTOE4Qn2k5MdEe7HGEAIP9wVS176yjh4Kxrj6yKJu0HCMb8ZYGXSlI54VQ7gauV/ScECGZBsg6wTLAriGsUxt47PmX2Q9VlMBL8Tk1DaaQfFzynEUU1OYdHA3CYLSucCnVWAotuIi8KTS6rFPj+EGa4rs55LDu9uxIPobibOJafjrmYgj5M/9sSSZ8lMlxc8RwoHVEJB3RR5b6cvZBxonSpvs1ahuyjxDZC5p049tnzMguhJZbeZ3UTr5Cs4LePZ6RuBIMYKWRPuUBz4BAO7NBOsCoqncdWe0oeBY71nBZrdSgJMEJaLIRMxrTUim5kN0uNZTGxMScxQdxwBliLjtwJUYQUz5rsOSk7qmLc2LUaRDgJePDYMeiIvBG8BMUJIYecpRDrGzAIIln04l56Nag5LLiMYVOAEwHNMHILZxlRjBjQBcp+F6quo4oPoVDzL2Rb8f9nZANRgRbRAk1XCwqUPijJQ3JRT8sOeTlxoiQLm0eZboeUUaBwENlC3RqSeJUHVE3knGrVvC+igblpPyb3uW3cwsVuc9PRboBD+NVnZsNVgnM4sGYAmr+6pfG4peJNAu2upPCF4V1+7t+7n9KIYrDBJetgpvTUklcnlqsZb6A679ROQlsMKuoMK0CFmgGDl1zTAIJicMR9Ytzx5sap9ZY6nDl3lfTyNIABQ2a/IP3pC8H35/69+alwY5Q0+4K2cRPY9IFCctJvx3d5diqqyDIHe+NRfzps3iMVLywpZBToyFtbJFPseztCXTdRXubA9gxPZTKB1SYmtcD49+d1mZpzv5mag+HDo/iDwTtYPzSRLeNIyfNoJb4VrV/DCVPbgRJRRWQpFgw5qp3qwW/iymColk8kaxXy0kAPmEzbcLQqpR+aThR3mCygjIDjUMIATGAk1JrOAGQOFPBkkbFbc7tkPNC4Dui7iYj48MIKWIWRKTG6WXMN5msIZ0vpLKwLEbUSwEQ8hqgiE3NVQfcWvdI+EAmeoA/G0/6A1XPeTIJYdsi5vZWgI9XJXVs5v+bnJDbYrsiDOtADHx3rFFKZAQ6EzUGy7QPl2uKR5YGKWBR3GtUMW9hmZjUvDBt273FmQDDCPhg+dHPbUxxCoTPMdX+aGGH7bn9taH53NUtJ7cMr1hnQiEBY6ASZgLP7hKqe+s6gOpsP75h+mjN5vPllYGNYaoqomLxDeObh1Qwi3ErNuG5ovAQhRiHjYSykMQR700PGr75WMzMHLELXmh43UvHpluulSD2tKOY86KZ8bJ1pbeyCIYUmuGC8wHZ+qGKH2/dEkzEYztu/WJUOdRln3xIddmS6a5j/kQfob0UU0XKnj0GDBsxVGi9PgE67PrGS9Dsl25To2qShzH8n5D9eqTXNNLrEgaPDrcQQ2cE1QGMLGqtsxVLNcQeyYHuYJj+3BiJuwuoOFsNDTivOJeTCQINJqaYi1KK3yhQewJykTuK75uTFWpxF4qi6k2vc3RKw3anQFlQpd14CNB9WgiSE7upKW9wZt18tRtla9WQWHidimMdqNvUKsqHLvB/quHn8nsZ8j4BZQxeUSi1qHck7e/Q7zUND6L+7XRPuMP4lTQWrlgsQ2++us0WkqHedYd+lO881a7iZ1dGuLmAnFxax+//16iLOLt4O66WqBLhi4KxXonQbVUMc6G3y9bGYCToHrGqznhMfhs+joL262vWGdyxv4cY4Wb+CSzSCJSYohpHefPp97FC2lx30giZdZqsbWY0TE7EQARq9ioTGlZv1sTh+Iyco3SqUgdOiRRyxZtZ6WeuOU5oMocAPpFMHzr/OdrXv+DCTrYzKWtJMKBApsnytIhZEo9xUk9ZqLVe3hSB6nEBwHmsRY1Xf6dt4JBnqFybyqhyofwzEsxSlfH9xKccMhJiBkEaROkzdQTDA9jVOeuARirrErVgTGvw3M0fszmD7h30MiNxbcw5RzxDKCM0xnjGP7ZpYni6b6hj4BQTo9lTQlf1fgL3rQkUoSLgGb07QAG8YZt/x9W7fjU5TT+M3k+EzvPR668DoHz2HxmJsQBE/gTGmU4SKLgXSTD3NiCspPO8Osv/Ta0C3sHxyzRuN020MHblnaX05YcNQJ0Ij2lsBfCNqhjzRvGK75w75i4JXAQGUMa3SOd3ZGyMqcwXSTee3YUixfAP9lTpahrnNjT4CGcLoI7VQq9Rg7xdOvbYZmy/YYyUlyf6LAU6zqgamebIGUk1H0zJTenNZ0uyNJBSnoPUA3e/DHN2Shy9Mdia0dJBmuhPNg+WG5S0MSyh9BaWPnFcTCJyc8jxmnbmrvdDr9yULGSr2Rg8/+RzR3t11pdeGc7GwwBTTU7QFe6FnvawNqAv2zNazlbkLNDJshFcks1MUdgbZdHsvLY4vKa7xV+JAf4C5+zfo0isjvHZNggAAAYRpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfv6hIxcEKKg4ZqpMFURFHrUIRKoRaoVUHk0u/oElDkuLiKLgWHPxYrDq4OOvq4CoIgh8gTo5Oii5S4v+SQosYD4778e7e4+4d4G9UmGoGxwFVs4x0MiFkc6tC+BURDCKEfgQlZupzopiC5/i6h4+vd3Ge5X3uz9Gj5E0G+ATiWaYbFvEG8fSmpXPeJ46ykqQQnxOPGXRB4keuyy6/cS467OeZUSOTnieOEgvFDpY7mJUMlXiKOKaoGuX7sy4rnLc4q5Uaa92TvzCS11aWuU5zGEksYgkiBMiooYwKLMRp1Ugxkab9hId/yPGL5JLJVQYjxwKqUCE5fvA/+N2tWZiccJMiCSD0YtsfI0B4F2jWbfv72LabJ0DgGbjS2v5qA5j5JL3e1mJHQO82cHHd1uQ94HIHGHjSJUNypABNf6EAvJ/RN+WAvluge83trbWP0wcgQ12lboCDQ2C0SNnrHu/u6uzt3zOt/n4AEgpygPP1yYgAAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfkDBkFIhAVLpKPAAAAKHRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QIGJ5IEdhZWxpY0dyaW1ld9KrjgAAA/xJREFUaN7tmdtvVFUUxn/nzKWFeCEVKQUm1kJFNGpF2gIJoNGIiTG+8ifxb/ikDz6p8cVLjBEUooINULRAKzOgtVbtnWnPzPGBb5KV7T5nZuppUxl3stMz56x9Wd/69rrsBmchpoNbSIe3fDvC3cCJFNRi4CdgSr8HgYGU+aaAH/V8EOh35oqAP4FbwDz/pGoIPA4cALqAv7T+4kYB0AW8AORSAFiQYjFQAoZS5qsZAJ5IkI2BFeAr4LIBIQ+c0pgcEOjbKPC5mTdTAOpC2WXADm1gDSinAONacCVBdlrgFICdwHbgZeCuvgEcAw5rL5F6EXgEeAOYA37NGoAF4B3n3UvASW38W+BOAnDvAsseBvhkP5ICAIekUBF4RgAUgWEpPw98CMyIDSd1VIc1T5y1E1wzvUeWCGSdCykLRsCq02spTGtY9Yp+I0YAjMhyMTAOVIAq8L0BbkBAZcoAd+DrWuQe8JmU8rVAlrEK3wGuJgAW6lyHwBE9x4ZB3ZqzBkyYcavATY0pSK66UQCMAn2yzjfAL01o9pzzrigAfLJvat4i8JiUXQLGBETdyC86QAfmd2GjGFACjmqx28B3TeRjnVW78aUUtvR5fM+nmgNHyZyzTuwcpcwBKACvauAS8InOarPo8Z6jdD2B/nWd60isCcWuG0b50DyXgD8Mex42YNzLOhNsnOVd2uh5YLbFsZHjQGspbDknYMvGoZWMzDWND5VsNaz4KLBfz7+n+KR1M2BAoSYQHbvkC3CcW8UD3JAUt21GWV5SkvQ1sE+bPK65I8X3aWAP8CTwljLG/ZKty79EWQIQSgmL9gmP3EUPAKEUcNs4MJkSOssCaFBAPK2wWFPUeVuJz1Oao5ENTiprzLQYCnT+I9Nrnh4nxHOfbD1BNjbvzonKdSVdDc9+F3hfKe+i2DUr1nzQovUBgnbK4UJKHWDPemTolW9TNpbCsVODNKxb9Vgwr+91B8DMa4E1zzluFYx/I1ttEmFWWX/Lk2ELFCJz2tiXns3ngVdkubI8etrmWpXdEgC8qAqtQdcZjzPKAc9r4ZwcYRJl25HdEjdCu/R32SQpQadciRUUpmpKYmq65Ch2CgB7BcKK6oMY2Kb3HQHAAU1WkVeumFT1gQegoDQ0VmESmRqh1GJZ+p8GoNtUYTuB08Yh7lDfqi2TMDhiMsSDnlD2LPDFgwpADtit51ngN/OtB+iVI8x5SuDAk1rHCaVyO7KbCkAoABoXlOfNt9cEQC/3r7YXnLH9wBnn3TzwsSctbkd2UwEYNqnvdSdTmzAl9CGVyrY9pG7btoTkqR3ZTQVgBvhBVphzvv0MXBJAC+aiYyzF+y6aMrkd2XXXL///d7jD29/vBDYID4OtbQAAAABJRU5ErkJggg=='

PCADJTIMEBTNFONTSZ = 6
PCADJTIMEDOWNIMAGE = DN32
PCADJTIMEFONTSZ = 18
PCADJTIMEUPIMAGE = UP32
PCBTNFONTSZ = 10
PCCOUNTERFONTSZ = 30
PCDOWNIMAGE = DN64
PCFONT = "Source Code Pro"
PCLABELFONTSZ = 12
PCQUITBTN = QUIT64
PCRESETONE = RESETONE64
PCSETTIMERFONTSZ = 20
PCSPACEFONTSZ = 10
PCSPINFONTSZ = 16
PCTIMERFONTSZ = 130
PCUPDOWNTIMEFONTSZ = 50
PCUPIMAGE = UP64
PCUPNOTIME = UPNOTIME64
PCZEROALL = ZEROALL64

CWD = PATH.abspath(".")
if CWD.find("_android") > -1:
	ADJTIMEBTNFONTSZ = 6
	ADJTIMEDOWNIMAGE = DN64
	ADJTIMEFONTSZ = 10
	ADJTIMEUPIMAGE = UP64
	BTNFONTSZ = 12
	CONFIGDIRECTORY = ""
	COUNTERFONTSZ = 20
	DOWNIMAGE = DN128
	FONT = "Source Code Pro"
	LABELFONTSZ = 12
	QUITBTN = QUIT128
	RESETONE = RESETONE128
	SETTIMERFONTSZ = 20
	SG.ChangeLookAndFeel("DarkPurple6")
	SPACEFONTSZ = 10
	SPINFONTSZ = 9
	TIMERFONTSZ = 70
	UPDOWNTIMEFONTSZ = 34
	UPIMAGE = UP128
	UPNOTIME = UPNOTIME128
	ZEROALL = ZEROALL128
elif CWD.find("_DEV") > -1:
	ADJTIMEBTNFONTSZ = PCADJTIMEBTNFONTSZ
	ADJTIMEDOWNIMAGE = PCADJTIMEDOWNIMAGE
	ADJTIMEFONTSZ = PCADJTIMEFONTSZ
	ADJTIMEUPIMAGE = PCADJTIMEUPIMAGE
	BTNFONTSZ = PCBTNFONTSZ
	CONFIGDIRECTORY = "/home/will/.config/biditi_DEV/"
	COUNTERFONTSZ = PCCOUNTERFONTSZ
	DOWNIMAGE = PCDOWNIMAGE
	FONT = PCFONT
	LABELFONTSZ = PCLABELFONTSZ
	QUITBTN = PCQUITBTN
	RESETONE = PCRESETONE
	SETTIMERFONTSZ = PCSETTIMERFONTSZ
	SG.ChangeLookAndFeel("DarkGreen5")
	SPACEFONTSZ = PCSPACEFONTSZ
	SPINFONTSZ = PCSPINFONTSZ
	TIMERFONTSZ = PCTIMERFONTSZ
	UPDOWNTIMEFONTSZ = PCUPDOWNTIMEFONTSZ
	UPIMAGE = PCUPIMAGE
	UPNOTIME = PCUPNOTIME
	ZEROALL = PCZEROALL
else:
	ADJTIMEBTNFONTSZ = PCADJTIMEBTNFONTSZ
	ADJTIMEDOWNIMAGE = PCADJTIMEDOWNIMAGE
	ADJTIMEFONTSZ = PCADJTIMEFONTSZ
	ADJTIMEUPIMAGE = PCADJTIMEUPIMAGE
	BTNFONTSZ = PCBTNFONTSZ
	CONFIGDIRECTORY = "/home/will/.config/biditi/"
	COUNTERFONTSZ = PCCOUNTERFONTSZ
	DOWNIMAGE = PCDOWNIMAGE
	FONT = PCFONT
	LABELFONTSZ = PCLABELFONTSZ
	QUITBTN = PCQUITBTN
	RESETONE = PCRESETONE
	SETTIMERFONTSZ = PCSETTIMERFONTSZ
	SG.ChangeLookAndFeel("DarkPurple6")
	SPACEFONTSZ = PCSPACEFONTSZ
	SPINFONTSZ = PCSPINFONTSZ
	TIMERFONTSZ = PCTIMERFONTSZ
	UPDOWNTIMEFONTSZ = PCUPDOWNTIMEFONTSZ
	UPIMAGE = PCUPIMAGE
	UPNOTIME = PCUPNOTIME
	ZEROALL = PCZEROALL

if CWD.find("_DEV") > -1:
	DEVMODE = True
	MAINWINDOWTITLE = "BIDITI_DEV"
else:
	DEVMODE = False
	MAINWINDOWTITLE = "biditi"


# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
# currentData dict keys and uses
# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#

BUTTON = "BUTTON"
DOWNSEC = "DOWNSEC"
EVENTS = "EVENTS"
FILENAME = "FILENAME"
TASK1COUNT = "TASK1COUNT"
TASK1DOWNTIMER = "TASK1DOWNTIMER"
TASK1NAME = "TASK1NAME"
TASK1UPTIMER = "TASK1UPTIMER"
TASK2COUNT = "TASK2COUNT"
TASK2DOWNTIMER = "TASK2DOWNTIMER"
TASK2NAME = "TASK2NAME"
TASK2UPTIMER = "TASK2UPTIMER"
TASK3COUNT = "TASK3COUNT"
TASK3DOWNTIMER = "TASK3DOWNTIMER"
TASK3NAME = "TASK3NAME"
TASK3UPTIMER = "TASK3UPTIMER"
TASK4COUNT = "TASK4COUNT"
TASK4DOWNTIMER = "TASK4DOWNTIMER"
TASK4NAME = "TASK4NAME"
TASK4UPTIMER = "TASK4UPTIMER"
TEXTNAME = "TEXTNAME"
UPSEC = "UPSEC"


# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
# the defaults for all things settable via currentData
# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
DEFAULTS = [
	(DOWNSEC, 7,),
	(EVENTS, [],),
	(FILENAME, "biditi.pkl",),
	(TASK1COUNT, 0,),
	(TASK1DOWNTIMER, 7,),
	(TASK1NAME, Q,),
	(TASK1UPTIMER, 14,),
	(TASK2COUNT, 0,),
	(TASK2DOWNTIMER, 7,),
	(TASK2NAME, QOMO,),
	(TASK2UPTIMER, 14,),
	(TASK3COUNT, 0,),
	(TASK3DOWNTIMER, 7,),
	(TASK3NAME, FIREFLY,),
	(TASK3UPTIMER, 20,),
	(TASK4COUNT, 0,),
	(TASK4DOWNTIMER, 7,),
	(TASK4NAME, PEAK,),
	(TASK4UPTIMER, 25,),
	(TEXTNAME, "biditi.txt",),
	(UPSEC, 20,),
]


def defaults():
	defaultsRtn = {}
	for entry in DEFAULTS:
		defaultsRtn[entry[0]] = entry[1]
	return defaultsRtn


DEFAULTSVALUESNDX = {
	TASK1NAME: 0,
	TASK2NAME: 1,
	TASK3NAME: 2,
	TASK4NAME: 3,
}


# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
# get a few things done that will be used by functions, but were unneeded by the init above
# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#

currentData = defaults()
directionUp = True
ticksPerSecond = TICKSPERSEC
interruptRate = INTERRUPTRATE
ticks = 0
timerRunning = False


def pickleIt(fileName, dataToPickle):
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	with open(CONFIGDIRECTORY + fileName, 'wb') as FD_OUT_:
		PD.dump(dataToPickle, FD_OUT_)
		FD_OUT_.flush()
		FD_OUT_.close()
	with open(CONFIGDIRECTORY + LASTFILENAME, "tw") as FD_OUT_:
		FD_OUT_.writelines(fileName)
		FD_OUT_.flush()
		FD_OUT_.close()


# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def unPickleIt(fileName):
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	with open(CONFIGDIRECTORY + fileName, "rb") as FD_IN_:
		dataToRTN_ = PD.load(FD_IN_)
	return dataToRTN_


# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def getData(fileName):
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	global currentData
	if PATH.exists(CONFIGDIRECTORY + fileName):
		currentData = unPickleIt(fileName)
	else:
		currentData = defaults()
		pickleIt(fileName, currentData)


# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def makeTime(secondsIn):
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	secondsIn = int(secondsIn)
	strRTN = f"{int(secondsIn // 60):02d}:{int(secondsIn % 60):02d}"
	return strRTN


# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def myInit():
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	if PATH.exists(CONFIGDIRECTORY + LASTFILENAME):
		# print(f"lastfilename {LASTFILENAME} being opened\n")
		FD_IN_ = open(CONFIGDIRECTORY + LASTFILENAME, "tr")
		filename = FD_IN_.readline()
		FD_IN_.close()
		if PATH.exists(CONFIGDIRECTORY + filename):
			getData(filename)
		else:
			pickleIt(LASTFILENAME, currentData)
	else:
		pickleIt(LASTFILENAME, currentData)
	# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


myInit()

# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
# buttons defined here, don't forget to ** double unpack these when used
# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#

ADJBTNDOWN = {
	"button_text": "",
	"font": (FONT, ADJTIMEBTNFONTSZ),
	"image_data": ADJTIMEDOWNIMAGE,
	"focus": True,
	"button_color": (ADJBTNDOWNTEXTCOLOR, ADJBTNDOWNCOLOR),
}

ADJBTNUP = {
	"button_text": "",
	"image_data": ADJTIMEUPIMAGE,
	"font": (FONT, ADJTIMEBTNFONTSZ),
	"focus": True,
	"button_color": (ADJBTNUPTEXTCOLOR, ADJBTNUPCOLOR),
}

BTNDOWN = {
	"button_color": (BTNDOWNTEXTCOLOR, BTNDOWNCOLOR),
	"button_text": "",
	"focus": True,
	"font": (FONT, BTNFONTSZ),
	"image_data": DOWNIMAGE,
}

BTNUP = {
	"button_color": (BTNUPTEXTCOLOR, BTNUPCOLOR),
	"button_text": "",
	"focus": True,
	"font": (FONT, BTNFONTSZ),
	"image_data": UPIMAGE,
}

BTNQUIT = {
	"button_color": (BTNQUITTEXTCOLOR, BTNQUITCOLOR),
	"button_text": "",
	"focus": True,
	"font": (FONT, BTNFONTSZ),
	"image_data": QUITBTN,
}

BTNRESETONE = {
	"button_color": (BTNRESETONETEXTCOLOR, BTNRESETONECOLOR),
	"button_text": "",
	"focus": True,
	"font": (FONT, BTNFONTSZ),
	"image_data": RESETONE,
}

BTNTASKUP = {
	"button_text": "",
	"image_data": UPIMAGE,
	"focus": True,
	"font": (FONT, BTNFONTSZ),
	"button_color": (BTNTASKUPTEXTCOLOR, BTNTASKUPCOLOR),
}

BTNTASKDOWN = {
	"button_color": (BTNTASKDOWNTEXTCOLOR, BTNTASKDOWNCOLOR),
	"button_text": "",
	"focus": True,
	"font": (FONT, BTNFONTSZ),
	"image_data": DOWNIMAGE,
}

BTNUPNOTIME = {
	"button_color": (BTNUPNOTIMETEXTCOLOR, BTNUPNOTIMECOLOR),
	"button_text": "",
	"focus": True,
	"font": (FONT, BTNFONTSZ),
	"image_data": UPNOTIME,
}

BTNZEROALL = {
	"button_color": (BTNZEROTEXTCOLOR, BTNZEROCOLOR),
	"button_text": "",
	"focus": True,
	"font": (FONT, BTNFONTSZ),
	"image_data": ZEROALL,
}

# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
# spin box
# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#


TASKSPINBOX = {
	"values": TASKLIST,
	"background_color": SPINBKGNDCOLOR,
	"font": (FONT, SPINFONTSZ,),
	"size": SPINSIZE,
	"text_color": SPINTEXTCOLOR,
}


# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
# text parameters
# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
TEXTADJTIMEDOWN = {
	"size": (5, 1),
	"text_color": ADJBTNDOWNTEXTCOLOR,
	"font": (FONT, ADJTIMEFONTSZ),
	"justification": "center",
	"background_color": ADJTIMEDOWNBKGNDCOLOR,
}

TEXTADJTIMEUP = {
	"size": (5, 1),
	"text_color": ADJBTNUPTEXTCOLOR,
	"font": (FONT, ADJTIMEFONTSZ),
	"justification": "center",
	"background_color": ADJTIMEUPBKGNDCOLOR,
}

TEXTTASKCOUNT = {
	"size": TASKCOUNTSZ,
	"text_color": TASKCOUNTERCOLOR,
	"font": (FONT, COUNTERFONTSZ),
	"justification": "center",
}

TEXTTIMERDOWN = {
	"size": (5, 1),
	"text_color": TIMERDOWNTEXTCOLOR,
	"font": (FONT, SETTIMERFONTSZ),
	"justification": "center",
	"background_color": TIMERDOWNBKGNDCOLOR,
}

TEXTTIMERDOWNPARMS = {
	"text_color": TIMERDOWNTEXTCOLOR,
	"background_color": TIMERDOWNBKGNDCOLOR,
}

TEXTTIMEROFF = {
	"size": (5, 1),
	"text_color": TIMEROFFTXTCOLOR,
	"font": (FONT, SETTIMERFONTSZ),
	"justification": "center",
	"background_color": TIMEROFFBKGNDCOLOR,
}

TEXTTIMEROFFPARMS = {
	"text_color": TIMEROFFTXTCOLOR,
	"background_color": TIMEROFFBKGNDCOLOR,
}

TEXTTIMERUP = {
	"size": (5, 1),
	"font": (FONT, SETTIMERFONTSZ),
	"justification": "center",
	"text_color": TIMERUPTEXTCOLOR,
	"background_color": TIMERUPBKGNDCOLOR,
}

TEXTTIMERUPPARMS = {
	"text_color": TIMERUPTEXTCOLOR,
	"background_color": TIMERUPBKGNDCOLOR,
}

TEXTSPACE1 = {
	"size": (3, 1),
	"text_color": SPACECOLOR,
	"font": (FONT, SPACEFONTSZ),
	"justification": "center",
}

TEXTDOWNLABEL = {
	"size": (3, 1),
	"text_color": TIMERDOWNTEXTCOLOR,
	"background_color": TIMERDOWNBKGNDCOLOR,
}

TEXTUPLABEL = {
	"size": (3, 1),
	"text_color": TIMERUPTEXTCOLOR,
	"background_color": TIMERUPBKGNDCOLOR,
}

TEXTDOWNTIME = {
	"size": (5, 1),
	"font": (FONT, UPDOWNTIMEFONTSZ),
	"justification": "center",
	"text_color": TIMERDOWNTEXTCOLOR,
	"background_color": TIMERDOWNBKGNDCOLOR,
}

TEXTUPTIME = {
	"size": (5, 1),
	"font": (FONT, UPDOWNTIMEFONTSZ),
	"justification": "center",
	"text_color": TIMERUPTEXTCOLOR,
	"background_color": TIMERUPBKGNDCOLOR,
}


# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
# columns, remember to ** unpack as appropriate
# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#

CLMTASK1 = [
	[
		SG.Spin(
			initial_value=currentData[TASK1NAME],
			key="_task1_spin_",
			**TASKSPINBOX,
		),
	],
	[
		SG.Button(
			key="task1+",
			**BTNTASKUP,
		),
		SG.Btn(
			key="task1+nt",
			**BTNUPNOTIME,
		),
	],
	[
		SG.Text(
			key="_task1count_",
			**TEXTTASKCOUNT,
		),
	],
	[
		SG.Button(
			key="task1-",
			**BTNTASKDOWN,
		),
		SG.Btn(
			key="task1reset",
			**BTNRESETONE,
		),
	],
	[
		SG.Btn(
			key="U1M+",
			**ADJBTNUP,
		),
		SG.Btn(
			key="U1S+",
			**ADJBTNUP,
		),
		SG.Btn(
			key="D1M+",
			**ADJBTNUP,
		),
		SG.Btn(
			key="D1S+",
			**ADJBTNUP,
		),
	],
	[
		SG.Text(
			key="_task1UpTimer_",
			**TEXTADJTIMEUP,
		),
		SG.Text(
			key="_task1DownTimer_",
			**TEXTADJTIMEDOWN,
		),
	],
	[
		SG.Btn(
			key="U1M-",
			**ADJBTNDOWN,
		),
		SG.Btn(
			key="U1S-",
			**ADJBTNDOWN,
		),
		SG.Btn(
			key="D1M-",
			**ADJBTNDOWN,
		),
		SG.Btn(
			key="D1S-",
			**ADJBTNDOWN,
		),
	],
]

CLMTASK2 = [
	[
		SG.Spin(
			initial_value=currentData[TASK2NAME],
			key="_task2_spin_",
			**TASKSPINBOX,
		),
	],
	[
		SG.Button(
			key="task2+",
			**BTNTASKUP,
		),
		SG.Btn(
			key="task2+nt",
			**BTNUPNOTIME,
		),
	],
	[
		SG.Text(
			key="_task2count_",
			**TEXTTASKCOUNT,
		),
	],
	[
		SG.Button(
			key="task2-",
			**BTNTASKDOWN,
		),
		SG.Btn(
			key="task2reset",
			**BTNRESETONE,
		),
	],
	[
		SG.Btn(
			key="U2M+",
			**ADJBTNUP,
		),
		SG.Btn(
			key="U2S+",
			**ADJBTNUP,
		),
		SG.Btn(
			key="D2M+",
			**ADJBTNUP,
		),
		SG.Btn(
			key="D2S+",
			**ADJBTNUP,
		),
	],
	[
		SG.Text(
			key="_task2UpTimer_",
			**TEXTADJTIMEUP,
		),
		SG.Text(
			key="_task2DownTimer_",
			**TEXTADJTIMEDOWN,
		),
	],
	[
		SG.Btn(
			key="U2M-",
			**ADJBTNDOWN,
		),
		SG.Btn(
			key="U2S-",
			**ADJBTNDOWN,
		),
		SG.Btn(
			key="D2M-",
			**ADJBTNDOWN,
		),
		SG.Btn(
			key="D2S-",
			**ADJBTNDOWN,
		),
	],
]

CLMTASK3 = [
	[
		SG.Spin(
			initial_value=currentData[TASK3NAME],
			key="_task3_spin_",
			**TASKSPINBOX,
		),
	],
	[
		SG.Button(
			key="task3+",
			**BTNTASKUP,
		),
		SG.Btn(
			key="task3+nt",
			**BTNUPNOTIME,
		),
	],
	[
		SG.Text(
			key="_task3count_",
			**TEXTTASKCOUNT,
		),
	],
	[
		SG.Button(
			key="task3-",
			**BTNTASKDOWN,
		),
		SG.Btn(
			key="task3reset",
			**BTNRESETONE,
		),
	],
	[
		SG.Btn(
			key="U3M+",
			**ADJBTNUP,
		),
		SG.Btn(
			key="U3S+",
			**ADJBTNUP,
		),
		SG.Btn(
			key="D3M+",
			**ADJBTNUP,
		),
		SG.Btn(
			key="D3S+",
			**ADJBTNUP,
		),
	],
	[
		SG.Text(
			key="_task3UpTimer_",
			**TEXTADJTIMEUP,
		),
		SG.Text(
			key="_task3DownTimer_",
			**TEXTADJTIMEDOWN,
		),
	],
	[
		SG.Btn(
			key="U3M-",
			**ADJBTNDOWN,
		),
		SG.Btn(
			key="U3S-",
			**ADJBTNDOWN,
		),
		SG.Btn(
			key="D3M-",
			**ADJBTNDOWN,
		),
		SG.Btn(
			key="D3S-",
			**ADJBTNDOWN,
		),
	],
]

CLMTASK4 = [
	[
		SG.Spin(
			initial_value=currentData[TASK4NAME],
			key="_task4_spin_",
			**TASKSPINBOX,
		),
	],
	[
		SG.Button(
			key="task4+",
			**BTNTASKUP,
		),
		SG.Btn(
			key="task4+nt",
			**BTNUPNOTIME,
		),
	],
	[
		SG.Text(
			key="_task4count_",
			**TEXTTASKCOUNT,
		),
	],
	[
		SG.Button(
			key="task4-",
			**BTNTASKDOWN,
		),
		SG.Btn(
			key="task4reset",
			**BTNRESETONE,
		),
	],
	[
		SG.Btn(
			key="U4M+",
			**ADJBTNUP,
		),
		SG.Btn(
			key="U4S+",
			**ADJBTNUP,
		),
		SG.Btn(
			key="D4M+",
			**ADJBTNUP,
		),
		SG.Btn(
			key="D4S+",
			**ADJBTNUP,
		),
	],
	[
		SG.Text(
			key="_task4UpTimer_",
			**TEXTADJTIMEUP,
		),
		SG.Text(
			key="_task4DownTimer_",
			**TEXTADJTIMEDOWN,
		),
	],
	[
		SG.Btn(
			key="U4M-",
			**ADJBTNDOWN,
		),
		SG.Btn(
			key="U4S-",
			**ADJBTNDOWN,
		),
		SG.Btn(
			key="D4M-",
			**ADJBTNDOWN,
		),
		SG.Btn(
			key="D4S-",
			**ADJBTNDOWN,
		),
	],
]

CLMTIMER = [
	[
		SG.Text(
			"000:00",
			size=(6, 1),
			text_color=TIMERUPTEXTCOLOR,
			font=(FONT, TIMERFONTSZ),
			justification="center",
			key="_timer_",
		),
	],
]

mainLayout = [
	[
		SG.Col(CLMTIMER),
	],
	[
		SG.Text(
			key="_upTime_",
			**TEXTUPTIME,
		),
		SG.Text(
			key="_downTime_",
			**TEXTDOWNTIME,
		),
		SG.Col(
			[
				[
					SG.Btn(
						key="Quit",
						**BTNQUIT,
					),
				],
				[
					SG.Btn(
						key="zeroAll",
						**BTNZEROALL,
					),
				],
			],
		),
	],
	[
		SG.Col(CLMTASK1),
		SG.Col(CLMTASK2),
		SG.Col(CLMTASK3),
		SG.Col(CLMTASK4),
	],
]

mainWindowParms = {
	"title": MAINWINDOWTITLE,
	"layout": mainLayout,
	"location": (0, 0),
	"element_padding": (0, 0),
	"no_titlebar": False,
}

mainFrame = SG.Window(
	**mainWindowParms
).finalize()


def nowStr(dtObj=DT.now()):
	return dtObj.strftime("%Y%m%d.%H%M%S")


def setTimer():
	ticks_ = ticks // ticksPerSecond
	mins_ = int(ticks_ // 60)
	secs_ = int(ticks_ % 60)
	timeStr = f"{mins_:03d}:{secs_:02d}"
	if directionUp is True and timerRunning is True:
		mainFrame.Element("_upTime_").Update(value=(makeTime(currentData[UPSEC] - ticks_)))
		mainFrame.Element("_downTime_").Update(value=(makeTime(0)))
	elif directionUp is False and timerRunning is True:
		mainFrame.Element("_upTime_").Update(value=(makeTime(0)))
		mainFrame.Element("_downTime_").Update(value=(makeTime(currentData[DOWNSEC] - ticks_)))
	else:
		mainFrame.Element("_upTime_").Update(value=(makeTime(0)))
		mainFrame.Element("_downTime_").Update(value=(makeTime(0)))
	mainFrame.Element("_timer_").Update(value=timeStr)


def updateAll():
	# update timer and cycleCount
	tempTimerVAL = ticks // ticksPerSecond
	setTimer()
	mainFrame.Element("_task1count_").Update(value=(f"{currentData[TASK1COUNT]:03d}"))
	mainFrame.Element("_task2count_").Update(value=(f"{currentData[TASK2COUNT]:03d}"))
	mainFrame.Element("_task3count_").Update(value=(f"{currentData[TASK3COUNT]:03d}"))
	mainFrame.Element("_task4count_").Update(value=(f"{currentData[TASK4COUNT]:03d}"))

	TUpTimer = makeTime(currentData[TASK1UPTIMER])
	TDownTimer = makeTime(currentData[TASK1DOWNTIMER])
	mainFrame.Element("_task1UpTimer_").Update(value=f"{TUpTimer}")
	mainFrame.Element("_task1DownTimer_").Update(value=f"{TDownTimer}")

	TUpTimer = makeTime(currentData[TASK2UPTIMER])
	TDownTimer = makeTime(currentData[TASK2DOWNTIMER])
	mainFrame.Element("_task2UpTimer_").Update(value=f"{TUpTimer}")
	mainFrame.Element("_task2DownTimer_").Update(value=f"{TDownTimer}")

	TUpTimer = makeTime(currentData[TASK3UPTIMER])
	TDownTimer = makeTime(currentData[TASK3DOWNTIMER])
	mainFrame.Element("_task3UpTimer_").Update(value=f"{TUpTimer}")
	mainFrame.Element("_task3DownTimer_").Update(value=f"{TDownTimer}")

	TUpTimer = makeTime(currentData[TASK4UPTIMER])
	TDownTimer = makeTime(currentData[TASK4DOWNTIMER])
	mainFrame.Element("_task4UpTimer_").Update(value=f"{TUpTimer}")
	mainFrame.Element("_task4DownTimer_").Update(value=f"{TDownTimer}")


def incCount(inCount):
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	TI = inCount + 1
	if TI > 999:
		TI = 999
	return TI
	# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def decCount(inCount):
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	TI = inCount - 1
	if TI < 0:
		TI = 0
	return TI
	# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def incTime(inSeconds, increment):
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	TInSeconds = inSeconds + increment
	TMin = TInSeconds // 60
	# TSec = TInSeconds % 60
	if TMin > 999:
		TInSeconds = (999 * 60) + 59
	return TInSeconds
	# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def decTime(inSeconds, increment):
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	TInSeconds = inSeconds - increment
	if TInSeconds < 0:
		TInSeconds = 0
	return TInSeconds
	# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def updateMainBackground(COLOR):
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	# put change background code
	mainFrame.Element("_timer_").Update(background_color=COLOR)
	# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def setTimerOff():
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	global ticks, directionUp
	directionUp = True
	ticks = 0
	mainFrame.Element("_timer_").Update(**TEXTTIMEROFFPARMS)
	# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def setTimerUp():
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	global directionUp, ticks
	directionUp = True
	ticks = 0
	mainFrame.Element("_timer_").Update(**TEXTTIMERUPPARMS)
	# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def zeroStuff():
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	global ticks, directionUp, currentData, timerRunning
	ticks = 0
	timerRunning = False
	directionUp = True
	currentData[EVENTS] = []
	currentData[TASK1COUNT] = 0
	currentData[TASK2COUNT] = 0
	currentData[TASK3COUNT] = 0
	currentData[TASK4COUNT] = 0
	pickleIt(currentData[FILENAME], currentData)
	updateAll()
	# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def startTimer():
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	global timerRunning, currentData, ticks, directionUp
	timerRunning = True
	ticks = 0
	directionUp = True
	mainFrame.Element("_timer_").Update(**TEXTTIMERUPPARMS)
	setTimer()
	# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def stopTimer():
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	global timerRunning, ticks
	timerRunning = False
	setTimerOff()
	updateAll()
	mainFrame.Element("_timer_").Update(**TEXTTIMEROFFPARMS)
	ticks = 0
	# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def getValues(inValues):
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	global currentData
	for key, item in DEFAULTSVALUESNDX.items():
		currentData[key] = inValues[item]
	# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def addEvent(event2add):
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	global currentData
	return
	entryToAdd = [nowStr(DT.now()), event2add]
	# currentData[EVENTS].append(entryToAdd)
	pickleIt(currentData[FILENAME], currentData)
	with open(CONFIGDIRECTORY + currentData[TEXTNAME], "ta") as FDOut:
		outStr = ""
		outStr += f"""{entryToAdd}	{currentData[TASK1COUNT]}	{currentData[TASK2COUNT]}	{currentData[TASK3COUNT]}	{currentData[TASK4COUNT]}
"""
		# print(outStr)
		FDOut.writelines(outStr)
		FDOut.flush()
		FDOut.close()
	# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰


def doEvents(event):
	# fold here ⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱⟱
	global currentData
	if timerRunning is True:
		return
	if event == "zeroAll":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		zeroStuff()
		stopTimer()
	# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "task1+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK1COUNT] = incCount(currentData[TASK1COUNT])
		currentData[UPSEC] = currentData[TASK1UPTIMER]
		currentData[DOWNSEC] = currentData[TASK1DOWNTIMER]
		updateAll()
		startTimer()
	# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "task2+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK2COUNT] = incCount(currentData[TASK2COUNT])
		currentData[UPSEC] = currentData[TASK2UPTIMER]
		currentData[DOWNSEC] = currentData[TASK2DOWNTIMER]
		updateAll()
		startTimer()
	# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "task3+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK3COUNT] = incCount(currentData[TASK3COUNT])
		currentData[UPSEC] = currentData[TASK3UPTIMER]
		currentData[DOWNSEC] = currentData[TASK3DOWNTIMER]
		updateAll()
		startTimer()
	# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "task4+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK4COUNT] = incCount(currentData[TASK4COUNT])
		currentData[UPSEC] = currentData[TASK4UPTIMER]
		currentData[DOWNSEC] = currentData[TASK4DOWNTIMER]
		updateAll()
		startTimer()
	# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣

	elif event == "task1-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK1COUNT] = decCount(currentData[TASK1COUNT])
		updateAll()
		stopTimer()
	# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "task2-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK2COUNT] = decCount(currentData[TASK2COUNT])
		updateAll()
		stopTimer()
	# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "task3-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK3COUNT] = decCount(currentData[TASK3COUNT])
		updateAll()
		stopTimer()
	# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "task4-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK4COUNT] = decCount(currentData[TASK4COUNT])
		updateAll()
		stopTimer()
	# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣

	elif event == "U1M+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK1UPTIMER] = incTime(currentData[TASK1UPTIMER], 60)
		updateAll()
	# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "U1S+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK1UPTIMER] = incTime(currentData[TASK1UPTIMER], 1)
		updateAll()
	# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D1M+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK1DOWNTIMER] = incTime(currentData[TASK1DOWNTIMER], 60)
		updateAll()
	# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D1S+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK1DOWNTIMER] = incTime(currentData[TASK1DOWNTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣

	elif event == "U2M+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK2UPTIMER] = incTime(currentData[TASK2UPTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "U2S+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK2UPTIMER] = incTime(currentData[TASK2UPTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D2M+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK2DOWNTIMER] = incTime(currentData[TASK2DOWNTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D2S+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK2DOWNTIMER] = incTime(currentData[TASK2DOWNTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣

	elif event == "U3M+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK3UPTIMER] = incTime(currentData[TASK3UPTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "U3S+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK3UPTIMER] = incTime(currentData[TASK3UPTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D3M+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK3DOWNTIMER] = incTime(currentData[TASK3DOWNTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D3S+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK3DOWNTIMER] = incTime(currentData[TASK3DOWNTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣

	elif event == "U4M+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK4UPTIMER] = incTime(currentData[TASK4UPTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "U4S+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK4UPTIMER] = incTime(currentData[TASK4UPTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D4M+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK4DOWNTIMER] = incTime(currentData[TASK4DOWNTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D4S+":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK4DOWNTIMER] = incTime(currentData[TASK4DOWNTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣

	elif event == "U1M-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK1UPTIMER] = decTime(currentData[TASK1UPTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "U1S-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK1UPTIMER] = decTime(currentData[TASK1UPTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D1M-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK1DOWNTIMER] = decTime(currentData[TASK1DOWNTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D1S-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK1DOWNTIMER] = decTime(currentData[TASK1DOWNTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣

	elif event == "U2M-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK2UPTIMER] = decTime(currentData[TASK2UPTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "U2S-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK2UPTIMER] = decTime(currentData[TASK2UPTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D2M-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK2DOWNTIMER] = decTime(currentData[TASK2DOWNTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D2S-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK2DOWNTIMER] = decTime(currentData[TASK2DOWNTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣

	elif event == "U3M-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK3UPTIMER] = decTime(currentData[TASK3UPTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "U3S-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK3UPTIMER] = decTime(currentData[TASK3UPTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D3M-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK3DOWNTIMER] = decTime(currentData[TASK3DOWNTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D3S-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK3DOWNTIMER] = decTime(currentData[TASK3DOWNTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣

	elif event == "U4M-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK4UPTIMER] = decTime(currentData[TASK4UPTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "U4S-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK4UPTIMER] = decTime(currentData[TASK4UPTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D4M-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK4DOWNTIMER] = decTime(currentData[TASK4DOWNTIMER], 60)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "D4S-":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		currentData[TASK4DOWNTIMER] = decTime(currentData[TASK4DOWNTIMER], 1)
		updateAll()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "task1+nt":
		currentData[TASK1COUNT] = incCount(currentData[TASK1COUNT])
		updateAll()
	elif event == "task2+nt":
		currentData[TASK2COUNT] = incCount(currentData[TASK2COUNT])
		updateAll()
	elif event == "task3+nt":
		currentData[TASK3COUNT] = incCount(currentData[TASK3COUNT])
		updateAll()
	elif event == "task4+nt":
		currentData[TASK4COUNT] = incCount(currentData[TASK4COUNT])
		updateAll()
	elif event == "task1reset":
		currentData[TASK1COUNT] = 0
		updateAll()
	elif event == "task2reset":
		currentData[TASK2COUNT] = 0
		updateAll()
	elif event == "task3reset":
		currentData[TASK3COUNT] = 0
		updateAll()
	elif event == "task4reset":
		currentData[TASK4COUNT] = 0
		updateAll()

# fold here ⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰⟰

getData(currentData[FILENAME])
updateAll()
stopTimer()
while True:  # Event Loop
	event, values = mainFrame.Read(timeout=interruptRate)  # use as high of a timeout value as you can
	# 	print(f"""
	# event |{event}|
	# values |{values}|
	# """)
	if (event is None) or (event == "Quit"):  # X or quit button clicked
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		addEvent(event)
		stopTimer()
		pickleIt(currentData[FILENAME], currentData)
		break
	# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	elif event == "__TIMEOUT__":
		# fold here ⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥⥥
		if directionUp is True:
			ticks += 1
		else:
			ticks -= 1
		if abs(ticks) > MAXTICKS:
			ticks = 0
		# print(f"ticks {ticks}")
		if timerRunning is True:
			upTicks = int(currentData[UPSEC] * ticksPerSecond)
			downTicks = int(currentData[DOWNSEC] * ticksPerSecond)
			if (directionUp is True) and (ticks > upTicks):
				mainFrame.Element("_timer_").Update(**TEXTTIMERDOWNPARMS)
				directionUp = False
				ticks = downTicks
			elif (directionUp is False) & (ticks <= ticksPerSecond):
				stopTimer()
		setTimer()
		# fold here ⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣⥣
	else:
		doEvents(event)


# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
# end of while True
# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#


# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
# end of biditi.proper
# #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
